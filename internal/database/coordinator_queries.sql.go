// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: coordinator_queries.sql

package database

import (
	"context"
)

const addCoordinator = `-- name: AddCoordinator :one
INSERT INTO
  society_coordinators (name, email, password_hash)
VALUES
  ($1, $2, $3)
RETURNING
  id, name, email, password_hash
`

type AddCoordinatorParams struct {
	Name         string
	Email        string
	PasswordHash string
}

func (q *Queries) AddCoordinator(ctx context.Context, arg AddCoordinatorParams) (SocietyCoordinator, error) {
	row := q.db.QueryRow(ctx, addCoordinator, arg.Name, arg.Email, arg.PasswordHash)
	var i SocietyCoordinator
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Email,
		&i.PasswordHash,
	)
	return i, err
}

const getCoordinatorByEmail = `-- name: GetCoordinatorByEmail :one
SELECT
  id, name, email, password_hash
FROM
  society_coordinators
WHERE
  email = $1
LIMIT
  1
`

func (q *Queries) GetCoordinatorByEmail(ctx context.Context, email string) (SocietyCoordinator, error) {
	row := q.db.QueryRow(ctx, getCoordinatorByEmail, email)
	var i SocietyCoordinator
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Email,
		&i.PasswordHash,
	)
	return i, err
}
